## https://gist.github.com/bhameyie/07c1ee9aaa3e8a200c8c
##based on Mesosphere Marathon's servicerouter.py haproxy config

# The URI I have in place for server health checks should load in milliseconds. If it takes longer than a second, I already know something is wrong. I don't need or want to wait 30s to know I am in fail state.
#timeout check 5s:
#
#
#They closed the browser window. They don't want your web page. Why on earth would you still serve the request? No request for YOU!
#option abortonclose:
#
#
#Seems like a fun and creative way to make sure health checks are legitimate. Almost the equivalent of a movie character turning around rapidly to see if anyone is behind them.
#spread-checks 5:
#
# I didn't even know this existed. Instead of instantly failing the request if it lands on a server that died just hand it off to another healthy host.
# retries 3:




global
  daemon
  log 127.0.0.1 local0
  log 127.0.0.1 local1 notice
  maxconn 4096
  tune.ssl.default-dh-param 2048

defaults
  log               global
  retries           3
  maxconn           2000
  timeout connect   5s
  timeout client    50s
  timeout server    50s

listen stats
  bind 127.0.0.1:9090
  balance
  mode http
  stats enable
  stats auth admin:admin

frontend microservice_http_in
  bind *:80
  mode http

frontend microservice_http_appid_in
  bind *:81
  mode http
  acl app__accountCreationService hdr(x-microservice-app-id) -i /accountCreationService
  acl app__profileEditingService hdr(x-microservice-app-id) -i /profileEditingService
  use_backend accountCreationService_10000 if app__accountCreationService
  use_backend profileEditingService_20000 if app__profileEditingService

frontend microservice_https_in
  bind *:443 ssl crt /etc/ssl/yourCertificate
  mode http

frontend accountCreationService_10000
  bind *:10000
  mode http
  use_backend accountCreationService_10000

frontend profileEditingService_20000
  bind *:20000
  mode http
  use_backend profileEditingService_20000

backend profileEditingService_20000
  balance roundrobin
  mode http
  option forwardfor
  http-request set-header X-Forwarded-Port %[dst_port]
  http-request add-header X-Forwarded-Proto https if { ssl_fc }
  server 151_256_250_152_35900 151.256.250.152:35900
  # additional servers here

backend accountCreationService_10000
  balance roundrobin
  mode http
  option forwardfor
  http-request set-header X-Forwarded-Port %[dst_port]
  http-request add-header X-Forwarded-Proto https if { ssl_fc }
  server 101_206_200_192_31900 101.206.200.192:31900
  # additional servers here

